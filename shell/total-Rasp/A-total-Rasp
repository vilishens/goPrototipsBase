#!/bin/bash

echo "Vajag salabot PointCmdBite (tas par lielu priek≈° RASPBERIJA)"

# golang itself
GO_DL_PC="https://dl.google.com/go/go1.12.9.linux-amd64.tar.gz"
GO_DL_RASP="https://dl.google.com/go/go1.12.9.linux-armv6l.tar.gz"
GO_DL=$GO_DL_RASP
#GO_DIR=$HOME/Tools/dev
GO_DIR=$HOME/Tools/dev1234
GO_LANG_GZ="go-dl.tar.gz"

# application code
GO_DEV_BASE=$HOME/0_Dev/
GO_DEV_DIR="goArduino"
GO_DEV_GO_DIR="go"
GIT_URL_BITBUCKET="git@bitbucket.org:vilishens/next.git"
GIT_URL_GITHUB_BASE="https://github.com/vilishens/goPrototipsBase.git"
GIT_URL_BASE=$GIT_URL_GITHUB_BASE
GIT_URL_GITHUB_GO="https://github.com/vilishens/goPrototipsGo.git"
GIT_URL_GO=$GIT_URL_GITHUB_GO

# environment settings
GO_ROOT=$GO_DIR/go
GO_PATH=$GO_DEV_BASE$GO_DEV_DIR/$GO_DEV_GO_DIR

# temporary environment settings
GO_PATH_TMP=$HOME/0_Dev/go_temporary

CURR_DIR=$(pwd)

echo '### GET golang'
./get_golang $CURR_DIR $GO_DL $GO_DIR
echo '### GET app BASE code'
./get_source_base $CURR_DIR $GO_DEV_BASE $GO_DEV_DIR $GIT_URL_BASE 
echo '### GET app GO code'
./get_source_go $CURR_DIR $GO_DEV_BASE/$GO_DEV_DIR $GO_DEV_GO_DIR  $GIT_URL_GO 

echo '### SET environment'
export GOROOT=$GO_ROOT
export GOPATH=$GO_PATH
export PATH=$PATH:$GO_ROOT/bin

echo '### SET temporary GOLANG environment for golang packages'
export GOPATH=$GO_PATH_TMP
#create the additonal package directory if it doesn't exist 
#if [ ! -d $GO_PATH_TMP ]; then
#  mkdir -p $GO_PATH_TMP
#fi

echo '### GET additional golang packages'
#./get_go_packages

echo '### COPY additinal packages to the permanent golang directory'
#cp -r $GO_PATH_TMP/bin/* $GO_DIR/go/bin
# remove directory with the packages as all packages moved to golang directory
#rm -rf $GO_PATH_TMP

echo '### SET back the permanent GOPATH'
export GOPATH=$GO_PATH

echo '### GET dns utils and nmap'
sudo apt-get install dnsutils
sudo apt install nmap

echo '### PREPARE application'
./prepare_app $CURR_DIR $GO_PATH

echo '### PREPARE .profile'
./set_profile $CURR_DIR $GO_ROOT $GO_PATH $SENDGRID_KEY

echo '### COPY boot start script'
cp startboot $HOME/bin


source $HOME/.profile

echo ""
echo ""
echo ""
echo ""
echo ""
echo ""
echo "**********************************************************"
echo "Please"
echo "i)   add the configuration file;"
echo "ii)  set cron"
echo "                  sudo crontab -e"
echo "                  @reboot (sleep 30 ; su - pi -c 'sh /home/pi/bin/startboot')"
echo "iii) restart Raspberry Pi"
echo ""
echo ""
echo ""

exit 7

